/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TournamentsTournamentIdIndexImport } from './routes/tournaments/$tournamentId/index'
import { Route as TournamentsTournamentIdPointsImport } from './routes/tournaments/$tournamentId/points'
import { Route as TournamentsTournamentIdUserIdImport } from './routes/tournaments/$tournamentId/$userId'
import { Route as TournamentsTournamentIdMatchesMatchIdImport } from './routes/tournaments/$tournamentId/matches/$matchId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TournamentsTournamentIdIndexRoute =
  TournamentsTournamentIdIndexImport.update({
    path: '/tournaments/$tournamentId/',
    getParentRoute: () => rootRoute,
  } as any)

const TournamentsTournamentIdPointsRoute =
  TournamentsTournamentIdPointsImport.update({
    path: '/tournaments/$tournamentId/points',
    getParentRoute: () => rootRoute,
  } as any)

const TournamentsTournamentIdUserIdRoute =
  TournamentsTournamentIdUserIdImport.update({
    path: '/tournaments/$tournamentId/$userId',
    getParentRoute: () => rootRoute,
  } as any)

const TournamentsTournamentIdMatchesMatchIdRoute =
  TournamentsTournamentIdMatchesMatchIdImport.update({
    path: '/tournaments/$tournamentId/matches/$matchId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/tournaments/$tournamentId/$userId': {
      id: '/tournaments/$tournamentId/$userId'
      path: '/tournaments/$tournamentId/$userId'
      fullPath: '/tournaments/$tournamentId/$userId'
      preLoaderRoute: typeof TournamentsTournamentIdUserIdImport
      parentRoute: typeof rootRoute
    }
    '/tournaments/$tournamentId/points': {
      id: '/tournaments/$tournamentId/points'
      path: '/tournaments/$tournamentId/points'
      fullPath: '/tournaments/$tournamentId/points'
      preLoaderRoute: typeof TournamentsTournamentIdPointsImport
      parentRoute: typeof rootRoute
    }
    '/tournaments/$tournamentId/': {
      id: '/tournaments/$tournamentId/'
      path: '/tournaments/$tournamentId'
      fullPath: '/tournaments/$tournamentId'
      preLoaderRoute: typeof TournamentsTournamentIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/tournaments/$tournamentId/matches/$matchId': {
      id: '/tournaments/$tournamentId/matches/$matchId'
      path: '/tournaments/$tournamentId/matches/$matchId'
      fullPath: '/tournaments/$tournamentId/matches/$matchId'
      preLoaderRoute: typeof TournamentsTournamentIdMatchesMatchIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  TournamentsTournamentIdUserIdRoute,
  TournamentsTournamentIdPointsRoute,
  TournamentsTournamentIdIndexRoute,
  TournamentsTournamentIdMatchesMatchIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/tournaments/$tournamentId/$userId",
        "/tournaments/$tournamentId/points",
        "/tournaments/$tournamentId/",
        "/tournaments/$tournamentId/matches/$matchId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/tournaments/$tournamentId/$userId": {
      "filePath": "tournaments/$tournamentId/$userId.tsx"
    },
    "/tournaments/$tournamentId/points": {
      "filePath": "tournaments/$tournamentId/points.tsx"
    },
    "/tournaments/$tournamentId/": {
      "filePath": "tournaments/$tournamentId/index.tsx"
    },
    "/tournaments/$tournamentId/matches/$matchId": {
      "filePath": "tournaments/$tournamentId/matches/$matchId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
